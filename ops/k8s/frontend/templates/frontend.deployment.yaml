# This YAML script defines a Kubernetes Deployment resource for routing external traffic to a service.

# Specifies the API version of the Deployment object
apiVersion: apps/v1
# Defines the kind of resource being created, which is a Deployment
# a deployment can spin up pods
# one pod is a running container
kind: Deployment
metadata:
  # Name of the Deployment
  name: devops-frontend-deployment
  # Namespace in which the Deployment is applied
  namespace: devops-test
  # Labels can be any key-value pairs used to manage Kubernetes resources
  labels:
    # Label for identifying the application
    app: devops-frontend-deployment
spec:
  # Number of desired replicas (instances beter known as pods) of the application
  replicas: {{ default 1 .Values.replicaCount | int }}
  selector:
    matchLabels:
      # Label selector for matching Pods managed by the Deployment
      app: devops-frontend-pod
  template:
    metadata:
      labels:
        # Label for the Pod template
        app: devops-frontend-pod
    spec:
      nodeSelector:
        # Node selector for scheduling Pods on nodes with the "kubernetes.io/os" label set to "linux"
        "kubernetes.io/os": linux
      imagePullSecrets:
        - name: regcred
      containers:
      # Name of the container
      - name: devops-frontend-container
        # Docker image used for the container
        image: "{{ .Values.image }}"
        imagePullPolicy: Always
        env:
          {{- include "devops-test-frontend.envVariables" . | indent 10 }}
        resources:
          requests:
            # CPU resource request for the container
            cpu: 100m
            # Memory resource request for the container
            memory: 128Mi
          limits:
            # CPU resource limit for the container
            cpu: 250m
            # Memory resource limit for the container
            memory: 256Mi
        ports:
        # Port on which the container listens for incoming traffic
        - containerPort: 80